# Generated by Django 5.2 on 2025-04-28 09:15

import apps.main.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0002_statistics'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='places',
            options={'verbose_name': 'Place', 'verbose_name_plural': 'Places'},
        ),
        migrations.AlterModelOptions(
            name='statistics',
            options={'verbose_name': 'Statistics', 'verbose_name_plural': 'Statistics'},
        ),
        migrations.AlterField(
            model_name='places',
            name='category',
            field=models.CharField(help_text='The type of place, such as restaurant, park, shop, etc.', max_length=100, verbose_name='Category'),
        ),
        migrations.AlterField(
            model_name='places',
            name='lat',
            field=models.FloatField(help_text='The geographical latitude coordinate of the place.', verbose_name='Latitude'),
        ),
        migrations.AlterField(
            model_name='places',
            name='lng',
            field=models.FloatField(help_text='The geographical longitude coordinate of the place.', verbose_name='Longitude'),
        ),
        migrations.AlterField(
            model_name='places',
            name='name',
            field=models.CharField(help_text="The official name of the place (e.g., Central Park, Joe's Diner).", max_length=500, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='statistics',
            name='number_of_people',
            field=models.FloatField(help_text='The number of people, expressed in thousands (e.g., 2.5 = 2,500 people).', verbose_name='Number of People (thousands)'),
        ),
        migrations.AlterField(
            model_name='statistics',
            name='year',
            field=models.IntegerField(help_text='The calendar year the data refers to.', unique=True, validators=[django.core.validators.MinValueValidator(1900), apps.main.validators.MaxCurrentYearValidator()], verbose_name='Year'),
        ),
    ]
